<div class="flex px-2 py-1 max-w-screen overflow-auto max-xl">
	<div class="flex items-center">
		<div>
			<a
				href="#"
				class="px-3 py-1 bg-slate-100 border border-none rounded-md transition"
				id="prevButton">
				&laquo;
			</a>
		</div>
		<div class="py-1 isolate whitespace-nowrap" id="categoriesContainer">
			{% for category in categories %} {% if selected_category == category %}
			<a
				href="?category={{ category }}"
				class="px-3 py-1 mx-1 bg-black text-white border border-none rounded-md transition hover:bg-gray-200 hover:text-black">
				{{ category }}
			</a>
			{% else %}
			<a
				href="?category={{ category }}"
				class="px-3 py-1 mx-1 bg-slate-100 border border-none rounded-md transition hover:bg-gray-200 hover:text-white">
				{{ category }}
			</a>
			{% endif %} {% endfor %}
		</div>
		<div>
			<a
				href="#"
				class="px-3 py-1 px-1 bg-slate-100 border border-none rounded-md transition"
				id="nextButton">
				&raquo;
			</a>
		</div>
	</div>
</div>

<!-- JavaScript code -->
<script>
	document.addEventListener("DOMContentLoaded", function () {
	  const categoriesContainer = document.getElementById("categoriesContainer");
	  const prevButton = document.getElementById("prevButton");
	  const nextButton = document.getElementById("nextButton");

	  const categories = [
	    {% for category in categories %}
	      "{{ category }}",
	    {% endfor %}
	  ];

	  let selectedCategoryIndex = categories.indexOf("{{ selected_category }}");

	  function renderCategories() {
	    categoriesContainer.innerHTML = "";
	    categories.forEach((category, index) => {
	      const categoryLink = document.createElement("a");
	      categoryLink.textContent = category;
	      categoryLink.href = "?category=" + category;
	      categoryLink.classList.add(
	        "px-3",
	        "py-1",
	        "mx-1",
	        "border",
	        "border-none",
	        "rounded-md",
	        "transition"
	      );

	      if (index === selectedCategoryIndex) {
	        categoryLink.classList.add("bg-black", "text-white");
	      } else {
	        categoryLink.classList.add("bg-slate-100", "text-black", "hover:bg-gray-200");
	      }

	      categoriesContainer.appendChild(categoryLink);
	    });
	  }

	  function updateSelectedCategory(index) {
	    selectedCategoryIndex = index;
	    renderCategories();
	  }

	  prevButton.addEventListener("click", function (event) {
	    if (selectedCategoryIndex > 0) {
	      updateSelectedCategory(selectedCategoryIndex - 1);
	    }
	  });

	  nextButton.addEventListener("click", function (event) {
	    if (selectedCategoryIndex < categories.length - 1) {
	      updateSelectedCategory(selectedCategoryIndex + 1);
	    }
	  });

	  // Initial rendering of categories
	  renderCategories();
	});
</script>
